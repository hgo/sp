/*
To customize the look and feel of Ionic, you can override the variables
in ionic's _variables.scss file.

For example, you might change some of the default colors:

$light:                           #fff !default;
$stable:                          #f8f8f8 !default;
$positive:                        #387ef5 !default;
$calm:                            #11c1f3 !default;
$balanced:                        #33cd5f !default;
$energized:                       #ffc900 !default;
$assertive:                       #ef473a !default;
$royal:                           #886aea !default;
$dark:                            #444 !default;
*/

// The path for our ionicons font files, relative to the built CSS in www/css
$ionicons-font-path: "../lib/ionic/fonts" !default;

// Include all of Ionic
@import "www/lib/ionic/scss/ionic";

//default
.more-icon{
  @extend .ion-android-more-horizontal
}
.platform-android {
  .more-icon{
    @extend .ion-android-more-horizontal
  }
}
.platform-ios {
  .more-icon {
    @extend .ion-ios-more
  }
}
.plus-icon{
  @extend .ion-android-add
}
.platform-android {
  .plus-icon{
    @extend .ion-android-add
  }
}
.platform-ios {
  .plus-icon {
    @extend .ion-ios-plus-empty
  }
}
.delete-icon{
  @extend .ion-android-delete;
}
.platform-android {
  .delete-icon{
    @extend .ion-android-delete
  }
}
.platform-ios {
  .delete-icon {
    @extend .ion-ios-trash-outline
  }
}
.select-item-icon{
  @extend .ion-ios-checkmark-outline;
}
.selected {
  .select-item-icon{
    @extend .ion-ios-checkmark;
  } 
}

.check-icon{
  @extend .ion-android-checkbox-outline;
}
.platform-android {
  .check-icon{
    @extend .ion-android-checkbox-outline
  }
}
.platform-ios {
  .check-icon {
    @extend .ion-ios-checkmark-empty
  }
}
.back-icon{
  @extend .ion-android-checkbox-outline;
}
.platform-android {
  .back-icon{
    @extend .ion-android-arrow-back
  }
}
.platform-ios {
  .back-icon {
    @extend .ion-ios-arrow-back
  }
}

.animate.ng-leave {
  -webkit-transition:0.2s linear all;
  -moz-transition:0.2s linear all;
  -o-transition:0.2s linear all;
  transition:0.2s linear all;
  
  opacity:1;
}
.animate.ng-leave.ng-leave-active {
  opacity:0;
}
.animate.ng-enter {
  /* the trailing 0.2s here is the delay */
  -webkit-transition:0.2s linear all 0.2s;
  -moz-transition:0.2s linear all 0.2s;
  -o-transition:0.2s linear all 0.2s;
  transition:0.2s linear all 0.2s;
  
  opacity:0;
}
.animate.ng-enter.ng-enter-active {
  opacity:1;
}

.item-options{
  .button{
    padding-left: 10px;
    padding-right: 10px;
  }
}
.item-delete {
  .button.icon{
    color:inherit;
  }
}
.item.selected{
  @extend .calm
}
@mixin bg-color($color) {
  background-color: $color;
}
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}
@mixin label-select($color) {
//  border-top:2px inset darken($color, 30% );
//  border-bottom:2px inset darken($color, 30% );
  @include box-shadow(3px, 3px, 11px, darken($color, 30% ), inset);
  opacity:1;
}
.label-grid{
  margin-left: 3px;
  margin-right: 3px;
  opacity: 0.5;

  &.assertive{@include bg-color($assertive);&.selected{@include label-select($assertive)}}
  &.positive{@include bg-color($positive);&.selected{@include label-select($positive)}}
  &.calm{@include bg-color($calm);&.selected{@include label-select($calm)}}
  &.balanced{@include bg-color($balanced);&.selected{@include label-select($balanced)}}
  &.energized{@include bg-color($energized);&.selected{@include label-select($energized)}}
  &.royal{@include bg-color($royal);&.selected{@include label-select($royal)}}
  &.dark{@include bg-color($dark);&.selected{@include label-select($dark)}}
}




















